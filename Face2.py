# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'faceTest.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import shutil
import os
from PyQt5 import QtCore, QtGui, QtWidgets
from FaceRecognition import face_recognize
import PredictingModels
from ImageAcquisition import path, CatchPICFromVideo
from ModelTraining import *


class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(826, 386)
        self.faceRecognitionButton = QtWidgets.QPushButton(Form)
        self.faceRecognitionButton.setGeometry(QtCore.QRect(30, 180, 151, 51))
        self.faceRecognitionButton.setObjectName("faceRecognitionButton")
        self.faceRecognitionButton.clicked.connect(self.face_recognition_clicked)

        self.faceInputButton = QtWidgets.QPushButton(Form)
        self.faceInputButton.setGeometry(QtCore.QRect(260, 350, 181, 21))
        self.faceInputButton.setObjectName("faceInputButton")
        self.faceInputButton.clicked.connect(self.face_input_clicked)

        self.modelDeleteButton = QtWidgets.QPushButton(Form)
        self.modelDeleteButton.setGeometry(QtCore.QRect(30, 720, 75, 23))
        self.modelDeleteButton.setObjectName("modelDeleteButton")

        self.verticalLayoutWidget = QtWidgets.QWidget(Form)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(260, 80, 191, 131))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.listWidget = QtWidgets.QListWidget(self.verticalLayoutWidget)
        self.listWidget.setObjectName("listWidget")

        self.initial_models_list()

        # item = QtWidgets.QListWidgetItem()
        # self.listWidget.addItem(item)
        # item = QtWidgets.QListWidgetItem()
        # self.listWidget.addItem(item)

        self.verticalLayout.addWidget(self.listWidget)

        self.notifyButton = QtWidgets.QPushButton(Form)
        self.notifyButton.setGeometry(QtCore.QRect(570, 290, 191, 51))
        self.notifyButton.setObjectName("notifyButton")

        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(220, 50, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Palatino Linotype")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setTextFormat(QtCore.Qt.PlainText)
        self.label_2.setObjectName("label_2")
        self.line = QtWidgets.QFrame(Form)
        self.line.setGeometry(QtCore.QRect(200, 10, 16, 351))
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(50, 10, 131, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(290, 10, 141, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")

        self.nameInput = QtWidgets.QLineEdit(Form)
        self.nameInput.setGeometry(QtCore.QRect(280, 300, 151, 20))
        self.nameInput.setText("")
        self.nameInput.setObjectName("nameInput")

        self.label_5 = QtWidgets.QLabel(Form)
        self.label_5.setGeometry(QtCore.QRect(230, 300, 47, 21))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.line_2 = QtWidgets.QFrame(Form)
        self.line_2.setGeometry(QtCore.QRect(500, 10, 16, 351))
        self.line_2.setFrameShape(QtWidgets.QFrame.VLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")

        self.faceDeleteButton = QtWidgets.QPushButton(Form)
        self.faceDeleteButton.setGeometry(QtCore.QRect(260, 220, 75, 23))
        self.faceDeleteButton.setObjectName("faceDeleteButton")
        self.faceDeleteButton.clicked.connect(self.face_delete_clicked)

        self.label_6 = QtWidgets.QLabel(Form)
        self.label_6.setGeometry(QtCore.QRect(220, 270, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Palatino Linotype")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setTextFormat(QtCore.Qt.PlainText)
        self.label_6.setObjectName("label_6")
        self.unkownFaceDisplay = QtWidgets.QLabel(Form)
        self.unkownFaceDisplay.setGeometry(QtCore.QRect(540, 80, 251, 151))
        self.unkownFaceDisplay.setFrameShape(QtWidgets.QFrame.WinPanel)
        self.unkownFaceDisplay.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.unkownFaceDisplay.setText("")
        self.unkownFaceDisplay.setObjectName("unkownFaceDisplay")
        self.label_7 = QtWidgets.QLabel(Form)
        self.label_7.setGeometry(QtCore.QRect(580, 10, 171, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("CNN Facial Recognition System", "CNN Facial Recognition System"))
        self.faceRecognitionButton.setText(_translate("Form", "Start Face Recognizer"))
        self.faceInputButton.setText(_translate("Form", "Start Face Recording"))
        self.modelDeleteButton.setText(_translate("Form", "Delete"))
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)

        # item = self.listWidget.item(0)
        # item.setText(_translate("Form", "zhihao"))
        # item = self.listWidget.item(1)
        # item.setText(_translate("Form", "mingyang"))

        self.listWidget.setSortingEnabled(__sortingEnabled)
        self.notifyButton.setText(_translate("Form", "Notify Me"))    
        self.label_2.setText(_translate("Form", "Knowns Faces:"))
        self.label.setText(_translate("Form", "Face Recognition"))
        self.label_3.setText(_translate("Form", "Faces Management"))
        self.label_5.setText(_translate("Form", "name:"))
        self.faceDeleteButton.setText(_translate("Form", "Delete"))
        self.label_6.setText(_translate("Form", "Add Faces:"))
        self.label_7.setText(_translate("Form", "Unkown Person Activities"))

    def face_recognition_clicked(self):
        face_recognize()

    def face_delete_clicked(self):
        listItems=self.listWidget.selectedItems()

        model_name = listItems[0].text()

        if not listItems: return        
        for item in listItems:
            self.listWidget.takeItem(self.listWidget.row(item))

        # start to delete the model in the model folder
        file_path = "./Model/" + model_name + ".face.model.h5"

        if os.path.isfile(file_path):
            os.remove(file_path)
            print("Model has been deleted")
        else:
            print("Model does not exist")

        image_data_path = "./FaceImageDate/" + model_name
        if os.path.isdir(image_data_path):
            shutil.rmtree(image_data_path)
            os.remove(image_data_path)
            print("Image folder has been deleted")
        else:
            print("Image folder does not exist")

        

    def initial_models_list(self):
        path = "./Model"
        for model in os.listdir(path):
            person_name = model[:-14]
            item = QtWidgets.QListWidgetItem()
            item.setText(person_name)
            self.listWidget.addItem(item)

    def face_input_clicked(self):
        # Get user's name and start to catch user's face.
        person_name = self.nameInput.text()
        saving_path=path(person_name)
        CatchPICFromVideo(saving_path,200)

        dataset = Dataset('FaceImageDate', person_name)
        dataset.load()

        # Start model training
        model = Model()
        model.build_model(dataset)
        model.train(dataset)
        model.save_model(file_path="./Model/" + person_name + ".face.model.h5")

        # Start to Evaluate the model
        model = Model()
        model.load_model(file_path="./Model/" + person_name + ".face.model.h5")
        model.evaluate(dataset)

        self.initial_models_list()

        del dataset

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
