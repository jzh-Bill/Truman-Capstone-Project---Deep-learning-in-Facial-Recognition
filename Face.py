# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'faceTest.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtWidgets, QtGui, QtCore
from PyQt5.QtWidgets import QWidget, QApplication, QLabel, QVBoxLayout, QHBoxLayout
from PyQt5.QtGui import QPixmap, QImage, QColor
from PyQt5.QtCore import pyqtSignal, pyqtSlot, Qt,QObject
import cv2

from FaceRecognition import face_recognize
from PredictingModels import *

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Face Recognition System")
        Form.resize(1601, 784)
        self.faceRecognitionButton = QtWidgets.QPushButton(Form)
        self.faceRecognitionButton.setGeometry(QtCore.QRect(30, 30, 201, 81))
        self.faceRecognitionButton.setObjectName("faceRecognitionButton")
        self.faceRecognitionButton.clicked.connect(self.face_recognition_clicked)

        self.importFacesButton = QtWidgets.QPushButton(Form)
        self.importFacesButton.setGeometry(QtCore.QRect(30, 200, 201, 81))
        self.importFacesButton.setObjectName("importFacesButton")

        self.modelDeleteButton = QtWidgets.QPushButton(Form)
        self.modelDeleteButton.setGeometry(QtCore.QRect(30, 720, 75, 23))
        self.modelDeleteButton.setObjectName("modelDeleteButton")

        self.verticalLayoutWidget = QtWidgets.QWidget(Form)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(30, 520, 201, 181))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")

        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.listWidget = QtWidgets.QListWidget(self.verticalLayoutWidget)
        self.listWidget.setObjectName("listWidget")
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        item = QtWidgets.QListWidgetItem()
        self.listWidget.addItem(item)
        self.verticalLayout.addWidget(self.listWidget)
        self.notifyMeButton = QtWidgets.QPushButton(Form)
        self.notifyMeButton.setGeometry(QtCore.QRect(30, 370, 201, 81))
        self.notifyMeButton.setObjectName("notifyMeButton")

        self.display_width = 1280
        self.display_height = 720

        self.videoBox = QtWidgets.QLabel(Form)
        self.videoBox.setGeometry(QtCore.QRect(270, 20, 1280, 720))
        self.videoBox.setObjectName("videoBox")

        self.label_2 = QtWidgets.QLabel(Form)
        self.label_2.setGeometry(QtCore.QRect(30, 490, 131, 31))
        font = QtGui.QFont()
        font.setPointSize(12)

        self.label_2.setFont(font)
        self.label_2.setTextFormat(QtCore.Qt.PlainText)
        self.label_2.setObjectName("label_2")

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.faceRecognitionButton.setText(_translate("Form", "Face Recognizer"))
        self.importFacesButton.setText(_translate("Form", "Import Face"))
        self.modelDeleteButton.setText(_translate("Form", "Delete"))
        __sortingEnabled = self.listWidget.isSortingEnabled()
        self.listWidget.setSortingEnabled(False)
        
        item = self.listWidget.item(0)
        item.setText(_translate("Form", "sb看你妈"))

        item = self.listWidget.item(1)
        item.setText(_translate("Form", "有煞笔"))
        self.listWidget.setSortingEnabled(__sortingEnabled)

        self.notifyMeButton.setText(_translate("Form", "Notify Me"))
        self.videoBox.setText(_translate("Form", "TextLabel"))
        self.label_2.setText(_translate("Form", "Manage Faces"))

    # This is the function that used to take in the OpenCV image and convert to QT5 image
    def convert_cv_qt(self, cv_img):
        """Convert from an opencv image to QPixmap"""
        rgb_image = cv2.cvtColor(cv_img, cv2.COLOR_BGR2RGB)
        h, w, ch = rgb_image.shape
        bytes_per_line = ch * w
        convert_to_Qt_format = QtGui.QImage(rgb_image.data, w, h, bytes_per_line, QtGui.QImage.Format_RGB888)
        p = convert_to_Qt_format.scaled(self.display_width, self.display_height, Qt.KeepAspectRatio)
        return QPixmap.fromImage(p)


    def face_recognition_clicked(self):
        


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
